接口
	一、接口是用来扩展方法的
	
	二、接口的特点：
		1.接口用关键字interface来表示
			interface 接口名{}
		2.类实现接口用implements关键字
			class 类名 implements 接口名{}
		3.接口不能被实例化，但是可以用多态的方式实例化（类似抽象类）
		4.接口的子类
			a:可以是抽象类，但是意义不大
			b:可以是具体类，要重写所有接口中抽象方法
			
	三、接口成员特点
		1.成员变量：只能是常量，且是静态的
			默认修饰符：public static final (建议手动给出)
		2.构造方法:没有构造方法
		3.成员方法:所有成员方法都是抽象的
			默认修饰符：public abstract (建议手动给出)
			
	四、关系区别
	类与类：继承，只能单继承，不能多继承，可以多层继承
	类与接口：实现，可以单实现，也可以多实现，还可以继承+多实现
		class Son extends Father implements Sister,Brother{}
	接口与接口：继承，可以单继承，也可以多继承
		interface Sister extends Father,Mother{}
		
五、老师学生实例：
/*
	老师和学生案例,加入抽烟的额外功能
	
	分析：从具体到抽象
		老师：姓名，年龄，吃饭，睡觉
		学生：姓名，年龄，吃饭，睡觉
		
		由于有共性功能，我们提取出一个父类，人类。
		
		人类：
			姓名，年龄
			吃饭();
			睡觉(){}
			
		抽烟的额外功能不是人或者老师，或者学生一开始就应该具备的，所以，我们把它定义为接口
		
		抽烟接口。

		部分老师抽烟：实现抽烟接口
		部分学生抽烟：实现抽烟接口
		
	实现：从抽象到具体
		
	使用：具体
*/
//抽烟接口
interface Smoking{
	public abstract void smoke();
}

//人类
abstract class Person{
	private String name;
	private int age;
	
	public Person() {}
	public Person(String name,int age) {
		 this.name=name;
		 this.age=age;
	}
	
	public void sleep() {
		System.out.println("睡觉");
	}
	public abstract void eat() ;
	
	public void show() {
		System.out.println("姓名："+name+" 年龄："+age);
	}

}

//学生类
class Student extends Person{
	public Student() {}
	public Student(String name,int age) {
		super(name,age);
	}
	public void eat() {
		System.out.println("学生吃食堂");
	}
}

//老师类
class Teacher extends Person{
	public Teacher() {}
	public Teacher(String name,int age) {
		super(name,age);
	}
	public void eat() {
		System.out.println("老师回家吃");
	}
}

//抽烟学生
class SmokingStudent extends Student implements Smoking{
	public SmokingStudent() {}
	public SmokingStudent(String name,int age) {
		super(name,age);
	}
	public void smoke() {
		System.out.println("学生抽烟");
	}	
}

//抽烟老师
class SmokingTeacher extends Teacher implements Smoking{
	public SmokingTeacher() {}
	public SmokingTeacher(String name,int age) {
		super(name,age);
	}
	
	public void smoke() {
		System.out.println("老师抽烟");
	}	
}

class Test{
	public static void main(String[] args) {
		//创建抽烟学生对象并测试
		SmokingStudent ss=new SmokingStudent("林青霞",20);
		ss.show();
		ss.eat();
		ss.smoke();
		ss.sleep();
		System.out.println("-----------------");
		
		//创建抽烟老师对象并测试
		SmokingTeacher st=new SmokingTeacher("刘意",40);
		st.show();
		st.eat();
		st.smoke();
		st.sleep();
	}
}
		
		