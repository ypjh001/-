JDK5新特性：自动拆装箱，泛型，增强for，静态导入，可变参数，枚举

	增强for循环(掌握)
		(1)是for循环的一种
		(2)格式：
			for(元素的数据类型 变量名 : 数组或者Collection集合的对象) {
				使用该变量即可，该变量其实就是数组或者集合中的元素。
			}
			例：
			ArrayList<String> arr=new ArrayList<String>;
			for(String s: arr){
				System.out.println(s);
			}	
		(3)好处：
			简化了数组和集合的遍历
		(4)弊端
			增强for循环的目标不能为null。建议在使用前，先判断是否为null。
			
	静态导入(了解)
		(1)可以导入到方法级别的导入
		(2)格式：
			import static 包名....类名.方法名;			
		(3)注意事项：
			A:方法必须是静态的
			B:如果多个类下有同名的方法，就不好区分了，还得加上前缀。
				所以一般我们并不使用静态导入，但是一定要能够看懂。		
				
	可变参数(掌握)
		(1)如果我们在写方法的时候，参数个数不明确，就应该定义可变参数。		
		(2)格式：
			修饰符 返回值类型 方法名(数据类型... 变量) {}			
			注意：
				A:该变量其实是一个数组名
				B:如果一个方法有多个参数，并且有可变参数，可变参数必须在最后
				public static int sum(int a,int... b){}				
		(3)Arrays工具类的一个方法
			public static<T> List<T> asList(T... a){}
			asList()把数组转成集合。
			
			List<String> list=Arrays.asList();			
			注意：这个集合的长度不能改变,即不支持删除增加。	
	
	枚举：
		(1)指将变量的值一一列出来，变量的值仅限于列举出来的值的范围内。
			像单例模式，一个类只能有一个实例，而每个类有固定的实例个数，
		就是枚举类。
		(2)直接新建enum类，public enum 类名{}
			public enum Demo{
				FRONT,BEHIND,LEFT,RIGHT;
				//自动重写toString()方法，返回对象名。
			}
		(3)注意：
			1.枚举类都是Enum的子类
			2.枚举类第一行必须是枚举项，最后一个枚举项后分号可以省略。
			3.枚举类可以有构造方法，但必须private修饰，使用枚举("");
			4.枚举类可以有抽象方法，但是枚举项必须重写该方法(匿名内部类)
			5.枚举类switch用法
			
	练习(掌握)
		A:集合的嵌套遍历
			ArrayList<ArrayList<Student>> arrp=new ArrayList<ArrayList<Student>>();
			
		B:产生10个1-20之间的随机数，要求随机数不能重复
		
		C:键盘录入多个数据，以0结束，并在控制台输出最大值		

			
			
			
			
			
			
			
			
			